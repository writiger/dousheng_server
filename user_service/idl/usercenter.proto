syntax = "proto3";

package user;
option go_package="/";

message Request {
  string ping = 1;
}

message Response {
  string pong = 1;
}

message BasicResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
}

message RegisterRequest {
  string username = 1; // 注册用户名，最长32个字符
  string password = 2; // 密码，最长32个字符
}

message LoginRequest {
  string username = 1; // 登陆用户名
  string password = 2; // 密码
}

message LoginResponse{
  int32  status_code  = 1; // 状态码，0-成功，其他值-失败
  string status_msg   = 2; // 返回状态描述
  int64  user_id      = 3; // UUID
}

message GetInfoRequest{
  int64 uuid = 1;
}

message GetInfoResponse{
  int32  status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg  = 2; // 返回状态描述
  User   user        = 3;
}

message FollowRequest{
  int64 user_id   = 1;
  int64 follow_id = 2;
}

message FollowListResponse{
  int32  status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg  = 2; // 返回状态描述
  repeated Follower followers = 3;
}

message JudgeFollowResponse{
  int32  status_code  = 1; // 状态码，0-成功，其他值-失败
  string status_msg   = 2; // 返回状态描述
  bool   is           = 3; // 是否关注
}
message SendMessageRequest{
  int64 user_id     = 1;
  int64 to_id       = 2;
  string message    = 3;
}
message MessageListRequest{
  int64 user_id   = 1;
  int64 to_id     = 2;
  int64 last_time          = 3;
}
message MessageListResponse{
  int32  status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg  = 2; // 返回状态描述
  repeated Message message_list =3;
}
message CountsResponse{
  int32  status_code  = 1; // 状态码，0-成功，其他值-失败
  string status_msg   = 2; // 返回状态描述
  int64  counts      = 3; // 数量
}
service UserCenter {
  rpc Ping(Request) returns(Response);
  rpc Register(RegisterRequest) returns (BasicResponse);
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc GetInfo(GetInfoRequest)returns(GetInfoResponse);
  rpc Follow(FollowRequest) returns (BasicResponse);
  rpc CancelFollow(FollowRequest) returns (BasicResponse);
  rpc JudgeFollow(FollowRequest) returns  (JudgeFollowResponse);
  rpc FollowList(GetInfoRequest) returns (FollowListResponse);
  rpc FollowerList(GetInfoRequest) returns (FollowListResponse);
  rpc FriendList(GetInfoRequest) returns (FollowListResponse);
  rpc SendMessage(SendMessageRequest) returns(BasicResponse);
  rpc MessageList(MessageListRequest) returns(MessageListResponse);
  rpc WorkCounts(GetInfoRequest) returns(CountsResponse);
  rpc FavouriteCounts(GetInfoRequest) returns(CountsResponse);
  rpc BePraisedCounts(GetInfoRequest) returns(CountsResponse);
}

message User {
  int64  id             = 1; // 用户id
  string name           = 2; // 用户名称
  int64  follow_count   = 3; // 关注总数
  int64  follower_count = 4; // 粉丝总数
  bool   is_follow      = 5; // true-已关注，false-未关注
}

message Follower{
  int64  UserId         = 1;//粉丝id
  int64  FollowId       = 2;//被关注者id
}
message Message{
  int64 id              =1;//消息id
  int64 from_user_id    =2;//消息发送者id
  int64 to_user_id      =3;//消息接收者id
  string content        =4;//消息内容
  int64 create_time     =5;//消息发送时间

}